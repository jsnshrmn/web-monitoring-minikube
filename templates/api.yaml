---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api
  namespace: development
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name:  rails-server
        image: envirodgi/db-rails-server:latest
        imagePullPolicy: Never
        ports: 
        - name: rails-server
          containerPort: 3000
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1024Mi"
            cpu: "1500m"
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 5
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: WEB_MONITORING_DB_URL
          value: "http://$(MY_POD_IP):30000/"
        - name: ALLOWED_ARCHIVE_HOSTS
          value: ""
        - name: AUTO_ANNOTATION_USER
          value: "annotation-bot@example.com"
        - name: DATABASE_URL
          value: "postgres://wm_dev_user:wm_dev_password@rds:5432/web_monitoring_dev"
        - name: DIFFER_DEFAULT
          #value: "http://$(MY_POD_IP):30004"
          value: "http://diffing:4000"
        # TODO: consider making this not a secret; it's used to bust caches
        - name: CACHE_DATE_DIFFER
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: cache-date-differ
        # TODO: consider making this not a secret
        - name: HOST_URL
          value: "http://$(MY_POD_IP):30000/"
        - name: LANG
          value: en_US.UTF-8
        - name: MAIL_SENDER
          value: website.monitoring@envirodatagov.org
        - name: MAX_COLLECTION_PAGE_SIZE
          value: "1000"
        - name: NEW_RELIC_AGENT_ENABLED
          value: "false"
        - name: POSTMARK_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: postmark_api_token
        - name: RACK_ENV
          value: development
        - name: RAILS_ENV
          value: development
        - name: RAILS_LOG_TO_STDOUT
          value: enabled
        - name: RAILS_SERVE_STATIC_FILES
          value: enabled
        - name: REDIS_URL
          value: redis://redis-master:6379
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: secret_key_base
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: sentry_dsn
        - name: TOKEN_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: token_private_key
        - name: INCREMENTAL_UPDATE
          value: "4"
        volumeMounts:
        - mountPath: /app/tmp
          name: api-tmp
      volumes:
      - name: api-tmp
        persistentVolumeClaim:
          claimName: api-tmp-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: api-tmp-claim
  labels:
    app: api
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: import-worker
  namespace: development
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: import-worker
    spec:
      containers:
      - name: db-import-worker
        image: envirodgi/db-import-worker:latest
        imagePullPolicy: Never
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1024Mi"
            cpu: "1500m"
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: ALLOWED_ARCHIVE_HOSTS
          value: "https://edgi-wm-versionista.s3.amazonaws.com/ https://edgi-wm-versionista.s3-us-west-2.amazonaws.com/ https://s3-us-west-2.amazonaws.com/edgi-wm-versionista/ https://edgi-versionista-archive.s3.amazonaws.com/ https://edgi-versionista-archive.s3.amazonaws.com/edgi-versionista-archive/"
          value: !!null
        # Set to "true" to be safe/conservative on what kinds of diffs to try
        # If we suddenly see the diff server going nuts, maybe uncomment this.
        # - name: ANALYSIS_REQUIRE_MEDIA_TYPE
        #   value: "true"
        - name: AUTO_ANNOTATION_USER
          value: "annotation-bot@example.com"
        - name: DATABASE_URL
          value: "postgres://wm_dev_user:wm_dev_password@rds:5432/web_monitoring_dev"
        - name: DIFFER_DEFAULT
          #value: "http://$(MY_POD_IP):30004"
          value: "http://diffing:4000"
        - name: HOST_URL
          value: "http://$(MY_POD_IP):30000/"
        - name: LANG
          value: en_US.UTF-8
        - name: MAIL_SENDER
          value: website.monitoring@envirodatagov.org
        - name: MAX_COLLECTION_PAGE_SIZE
          value: "1000"
        - name: NEW_RELIC_AGENT_ENABLED
          value: "false"
        - name: POSTMARK_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: postmark_api_token
        - name: RACK_ENV
          value: development
        - name: RAILS_ENV
          value: development
        - name: RAILS_LOG_TO_STDOUT
          value: enabled
        - name: RAILS_SERVE_STATIC_FILES
          value: enabled
        - name: REDIS_URL
          value: redis://redis-master:6379
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: secret_key_base
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: sentry_dsn
        - name: TOKEN_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: token_private_key
        - name: INCREMENTAL_UPDATE
          value: "3"
        volumeMounts:
        - mountPath: /app/tmp
          name: api-tmp
      volumes:
      - name: api-tmp
        persistentVolumeClaim:
          claimName: api-tmp-claim
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis-master
  namespace: development
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: gcr.io/google_containers/redis:e2e  # or just image: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis-slave
  namespace: development
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: slave
        tier: backend
    spec:
      containers:
      - name: slave
        image: gcr.io/google_samples/gb-redisslave:v1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
          # If your cluster config does not include a dns service, then to
          # instead access an environment variable to find the master
          # service's host, comment out the 'value: dns' line above, and
          # uncomment the line below:
          # value: env
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: development
spec:
  selector:
    app: api
  ports:
  - name: http
    port: 80
    targetPort: rails-server
    nodePort: 30000
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  namespace: development
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: redis-slave
  namespace: development
  labels:
    app: redis
    role: slave
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: redis
    role: slave
    tier: backend
  type: NodePort
